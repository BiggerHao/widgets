{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "description": "An interactive histogram for visualizing a univariate distribution.",
    "padding": 5,
    "signals": [
        {
            "name": "sliderRange",
            "value": null
        },
        {
            "name": "scatterXRange",
            "value": null
        },
        {
            "name": "scatterYRange",
            "value": null
        },
        {
            "name": "maxbins",
            "value": 15
        },
        {
            "name": "hover",
            "on": [
                {
                    "events": "rect:mouseover",
                    "encode": "select"
                },
                {
                    "events": "rect:mouseout",
                    "encode": "release"
                }
            ]
        },
        {
            "name": "selectedBin",
            "value": "{selected: false, bin: null }",
            "on": [
                {
                    "events": "rect:click",
                    "update": "{selected: selectedBin.bin!=null ? (selectedBin.bin.bin0 != datum.bin0 && selectedBin.bin.bin1 != datum.bin1) : true, bin: selectedBin.bin!=null && (selectedBin.bin.bin0 == datum.bin0 && selectedBin.bin.bin1 == datum.bin1) ? null : datum }"
                }
            ]
        }
    ],
    "data": [
        {
            "name": "irisData",
            "transform": [
                {
                    "type": "extent",
                    "field": "petalWidth",
                    "signal": "xext"
                },
                {
                    "type": "extent",
                    "field": "sepalLength",
                    "signal": "slext"
                },
                {
                    "type": "extent",
                    "field": "sepalWidth",
                    "signal": "swext"
                }
            ]
        },
        {
            "name": "binned",
            "source": "irisData",
            "transform": [
                {
                    "type": "filter",
                    "expr": "scatterXRange && scatterYRange ? inrange(datum.sepalLength, scatterXRange) && inrange(datum.sepalWidth, scatterYRange) : true"
                },
                {
                    "type": "filter",
                    "expr": "sliderRange!=null ? inrange(datum.petalLength, [invert('rangeScale', sliderRange[0]), invert('rangeScale', sliderRange[1])]) : true"
                },
                {
                    "type": "bin",
                    "field": "petalWidth",
                    "extent": {
                        "signal": "xext"
                    },
                    "maxbins": {
                        "signal": "maxbins"
                    }
                },
                {
                    "type": "aggregate", 
                    "key": "bin0",
                    "groupby": [
                        "bin0",
                        "bin1"
                    ],
                    "fields": [
                        "bin0"
                    ],
                    "ops": [
                        "count"
                    ],
                    "as": [
                        "count"
                    ]
                }
            ]
        },
        {
            "name": "binned-static",
            "source": "irisData",
            "transform": [
                {
                    "type": "bin",
                    "field": "petalWidth",
                    "extent": {
                        "signal": "xext"
                    },
                    "maxbins": {
                        "signal": "maxbins"
                    }
                },
                {
                    "type": "aggregate",
                    "key": "bin0",
                    "groupby": [
                        "bin0",
                        "bin1"
                    ],
                    "fields": [
                        "bin0"
                    ],
                    "ops": [
                        "count"
                    ],
                    "as": [
                        "count"
                    ]
                }
            ]
        }
    ],
    "scales": [
        {
            "name": "xscale",
            "type": "linear",
            "range": "width",
            "domain": {
                "signal": "xext"
            }
        },
        {
            "name": "yscale",
            "type": "linear",
            "range": "height",
            "round": true,
            "domain": {
                "data": "binned-static",
                "field": "count"
            },
            "zero": true,
            "nice": true
        },
        {
            "name": "rangeScale",
            "domain": {
                "data": "irisData",
                "field": "petalLength"
            },
            "range": {
                "signal": "[0, width]"
            }
        }
    ],
    "axes": [
        {
            "orient": "bottom",
            "scale": "xscale",
            "zindex": 1,
            "title": "Petal Width (cm)"
        },
        {
            "orient": "left",
            "scale": "yscale",
            "tickCount": 5,
            "zindex": 1,
            "title": "# of Iris"
        }
    ],
    "marks": [
        {
            "type": "rect",
            "from": {
                "data": "binned"
            },
            "encode": {
                "update": {
                    "x": {
                        "scale": "xscale",
                        "field": "bin0"
                    },
                    "x2": {
                        "scale": "xscale",
                        "field": "bin1"
                    },
                    "y": {
                        "scale": "yscale",
                        "field": "count"
                    },
                    "y2": {
                        "scale": "yscale",
                        "value": 0
                    },
                    "fill": {
                        "signal": "selectedBin.bin!=null && (selectedBin.bin.bin0 == datum.bin0 && selectedBin.bin.bin1 == datum.bin1) ? (selectedBin.selected ? 'lightgreen' : 'steelblue') : 'steelblue'"
                    },
                    "stroke": {
                        "value": "white"
                    }
                },
                "select": {
                    "fillOpacity": {
                        "value": 0.5
                    }
                },
                "release": {
                    "fillOpacity": {
                        "value": 1
                    }
                }
            }
        }
    ]
}